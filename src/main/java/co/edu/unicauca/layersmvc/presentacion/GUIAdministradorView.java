/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.layersmvc.presentacion;

import co.edu.unicauca.layersmvc.access.CompanyRepository;
import co.edu.unicauca.layersmvc.access.CoordinatorRepository;
import co.edu.unicauca.layersmvc.access.ICompanyRepository;
import co.edu.unicauca.layersmvc.access.ICoordinatorRepository;
import co.edu.unicauca.layersmvc.access.IStudentRepository;
import co.edu.unicauca.layersmvc.access.StudentRepository;
import co.edu.unicauca.layersmvc.domain.Company;
import co.edu.unicauca.layersmvc.domain.Coordinator;
import co.edu.unicauca.layersmvc.domain.Student;
import co.edu.unicauca.layersmvc.domain.service.ServiceCompany;
import co.edu.unicauca.layersmvc.domain.service.ServiceCoordinator;
import co.edu.unicauca.layersmvc.domain.service.ServiceStudent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Katherine
 */
public class GUIAdministradorView extends javax.swing.JFrame {
 private List<Student> listStudents;
 private List<Coordinator> listCoordinator;
 private List<Company> listCompany;
    /**
     * Creates new form GUIAdministradorView
     */
  public GUIAdministradorView(List<Student> listStudents, List<Coordinator> listCoordinator,List<Company> listCompany) {
    initComponents();
    this.listStudents = listStudents != null ? listStudents : new ArrayList<>(); // Evitar NullPointerException
    this.listCoordinator = listCoordinator != null ? listCoordinator : new ArrayList<>(); 
    this.listCompany = listCompany != null ? listCompany : new ArrayList<>(); 
    loadStudents();
    loadCoordinator(); // Agregado para cargar coordinadores
    setResizable(false); // Evita que la ventana cambie de tamaño
    setVisible(true); // Muestra la ventana después de inicializar
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEstudiantes = new javax.swing.JTable();
        jButtonEliminarEs = new javax.swing.JButton();
        jButtonActualizarEs = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCoordinador = new javax.swing.JTable();
        jButtonEliminarCor = new javax.swing.JButton();
        jButtonActualizarCor = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEmpresa = new javax.swing.JTable();
        jButtonEliminarEm = new javax.swing.JButton();
        jButtonActualizarEm = new javax.swing.JButton();
        jButtonSalirAdmin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificacion", "Nombres", "Apellidos", "Correo", "Usuario", "Contraseña"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEstudiantes);

        jButtonEliminarEs.setText("Eliminar");

        jButtonActualizarEs.setText("Actualizar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButtonEliminarEs)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonActualizarEs)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminarEs)
                    .addComponent(jButtonActualizarEs))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Estudiante", jPanel2);

        jTableCoordinador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificacion", "Nombres", "Apellidos", "Correo", "Usuario", "Contraseña"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableCoordinador);

        jButtonEliminarCor.setText("Eliminar");

        jButtonActualizarCor.setText("Actualizar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addGap(15, 15, 15))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jButtonEliminarCor)
                .addGap(27, 27, 27)
                .addComponent(jButtonActualizarCor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminarCor)
                    .addComponent(jButtonActualizarCor))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Coodinador", jPanel3);

        jTableEmpresa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificacion", "Nombres", "Apellidos", "Correo", "Usuario", "Contraseña"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableEmpresa);

        jButtonEliminarEm.setText("Eliminar");
        jButtonEliminarEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarEmActionPerformed(evt);
            }
        });

        jButtonActualizarEm.setText("Actualizar");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addGap(15, 15, 15))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jButtonEliminarEm)
                .addGap(18, 18, 18)
                .addComponent(jButtonActualizarEm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminarEm)
                    .addComponent(jButtonActualizarEm))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Empresa", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jButtonSalirAdmin.setText("Salir");
        jButtonSalirAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonSalirAdmin))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButtonSalirAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEliminarEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarEmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEliminarEmActionPerformed

    private void jButtonSalirAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirAdminActionPerformed
        // TODO add your handling code here:
        GUIUserView login = new GUIUserView();

        login.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_jButtonSalirAdminActionPerformed
private void loadStudents() {
    DefaultTableModel model = (DefaultTableModel) jTableEstudiantes.getModel();
    
    // Limpiar la tabla antes de agregar nuevos datos
    model.setRowCount(0);

    // Verificar si la lista de estudiantes es null
    if (listStudents == null || listStudents.isEmpty()) {
        System.out.println("No hay estudiantes registrados.");
        return;
    }
    
    for (Student p : listStudents) {
        model.addRow(new Object[]{
            p.getIdentificacion(), 
            p.getNombre(),
            p.getApellidos(),  
            p.getCorreo(),  
            p.getUsername(),  
            p.getPassword(),
        });
    }
}

private void loadCoordinator() {
    DefaultTableModel model = (DefaultTableModel) jTableCoordinador.getModel();
    
    // Limpiar la tabla antes de agregar nuevos datos
    model.setRowCount(0);

    // Verificar si la lista de estudiantes es null
    if (listCoordinator == null || listCoordinator.isEmpty()) {
        System.out.println("No hay coordinadores registrados.");
        return;
    }
    
    for (Coordinator c : listCoordinator) {
        model.addRow(new Object[]{
            c.getIdentificacion(), 
            c.getNombre(),
            c.getApellidos(),  
            c.getCorreo(),  
            c.getUsername(),  
            c.getPassword(),
        });
    }
}
private void loadCompany() {
    DefaultTableModel model = (DefaultTableModel) jTableEmpresa.getModel();
    
    // Limpiar la tabla antes de agregar nuevos datos
    model.setRowCount(0);

    // Verificar si la lista de estudiantes es null
    if (listCompany == null || listCompany.isEmpty()) {
        System.out.println("No hay coordinadores registrados.");
        return;
    }
    
    for (Company c : listCompany) {
        model.addRow(new Object[]{
            c.getNit(), 
            c.getNombreContacto(),
            c.getApellidosContacto(),  
            c.getCorreo(),  
            c.getUsername(),  
            c.getPassword(),
        });
    }
}
    /**
     * @param args the command line arguments
     */
  public static void main(String[] args) {
    // Crear instancias de los repositorios
    IStudentRepository studentRepo = new StudentRepository(); // Implementación concreta
    ICoordinatorRepository coordinatorRepo = new CoordinatorRepository(); // Implementación concreta
    ICompanyRepository companyRepo = new CompanyRepository();

    // Crear el servicio de estudiantes y coordinadores
    ServiceStudent serviceStudent = new ServiceStudent(studentRepo);
    ServiceCoordinator serviceCoordinator = new ServiceCoordinator(coordinatorRepo);
    ServiceCompany serviceCompany = new ServiceCompany(companyRepo);

    // Obtener la lista de estudiantes y coordinadores
    List<Student> studentList = serviceStudent.listStudents();
    if (studentList == null) {
        studentList = new ArrayList<>(); // Evita null
    }

    List<Coordinator> coordinatorList = serviceCoordinator.listCoordinator();
    if (coordinatorList == null) {
        coordinatorList = new ArrayList<>(); // Evita null
    }
    List<Company> companyList = serviceCompany.listCompanies();
    if (coordinatorList == null) {
        coordinatorList = new ArrayList<>(); // Evita null
    }

    // Crear una variable para la vista
    GUIAdministradorView adminView = new GUIAdministradorView(studentList, coordinatorList, companyList);

    // Ejecutar la interfaz gráfica en el hilo de eventos de Swing
    java.awt.EventQueue.invokeLater(() -> {
        adminView.setVisible(true);
    });
}




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizarCor;
    private javax.swing.JButton jButtonActualizarEm;
    private javax.swing.JButton jButtonActualizarEs;
    private javax.swing.JButton jButtonEliminarCor;
    private javax.swing.JButton jButtonEliminarEm;
    private javax.swing.JButton jButtonEliminarEs;
    private javax.swing.JButton jButtonSalirAdmin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCoordinador;
    private javax.swing.JTable jTableEmpresa;
    private javax.swing.JTable jTableEstudiantes;
    // End of variables declaration//GEN-END:variables
}
